name: Build RPM/DEB packages

on: [push, pull_request]

jobs:
  deb:
    # Try to build DEB packages
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image: ['ubuntu:18.04', 'ubuntu:20.04', 'debian:stretch', 'debian:buster', 'debian:bullseye']

    name: Build DEBs on ${{ matrix.image }}
    container: ${{ matrix.image }}

    steps:
    - uses: actions/checkout@v2
    - name: Define global variables
      run: echo "::set-output name=zip_file::libfds-${IMAGE//:/}-$GITHUB_SHA.zip"
      shell: bash
      env:
        IMAGE: ${{ matrix.image }}
      id: vars

    # Dependencies ---------------------------------------------------------------------------
    - name: Install dependencies (Ubuntu/Debian)
      run: |
        apt-get update
        apt-get -y install git gcc g++ cmake make libxml2-dev liblz4-dev libzstd-dev
        apt-get -y install debhelper pkg-config devscripts build-essential fakeroot zip
      env:
        DEBIAN_FRONTEND: noninteractive

    # Build ----------------------------------------------------------------------------------
    - name: Build DEB packages
      run: |
        mkdir build && cd build
        cmake .. -DPACKAGE_BUILDER_DEB=On -DCPACK_PACKAGE_CONTACT="GitHub actions <no-reply@example.com>"
        make deb
    - name: Archive DEB packages
      if: github.event_name == 'push'
      uses: actions/upload-artifact@v2
      with:
        name: ${{ steps.vars.outputs.zip_file }}
        path: |
          build/pkg/deb/debbuild/*.deb
          build/pkg/deb/debbuild/*.ddeb
          build/pkg/deb/debbuild/*.tar.gz
          build/pkg/deb/debbuild/*.dsc

  rpm:
    # Try to build RPM packages
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image: ['centos:7', 'centos:8']

    name: Build RPMs on ${{ matrix.image }}
    container: ${{ matrix.image }}

    steps:
    - uses: actions/checkout@v2
    - name: Define global variables
      run: echo "::set-output name=zip_file::libfds-${IMAGE//:/}-$GITHUB_SHA.zip"
      env:
        IMAGE: ${{ matrix.image }}
      id: vars

    # Dependencies ---------------------------------------------------------------------------
    - name: Install dependencies (CentOS)
      if: startsWith(matrix.image, 'centos')
      run: |
        yum -y install epel-release
        yum -y install git gcc gcc-c++ cmake make libxml2-devel lz4-devel libzstd-devel rpm-build
    - name: Install depedencies (Fedora)
      if: startsWith(matrix.image, 'fedora')
      run: dnf -y install git gcc gcc-c++ cmake make libxml2-devel lz4-devel libzstd-devel rpm-build

    # Build ----------------------------------------------------------------------------------
    - name: Build RPM packages
      run: |
        mkdir build && cd build
        cmake .. -DPACKAGE_BUILDER_RPM=On -DCPACK_PACKAGE_CONTACT="GitHub actions <no-reply@example.com>"
        make rpm
    - name: Archive RPM packages
      if: github.event_name == 'push'
      uses: actions/upload-artifact@v2
      with:
        name: ${{ steps.vars.outputs.zip_file }}
        path: |
          build/pkg/rpm/rpmbuild/RPMS/
          build/pkg/rpm/rpmbuild/SRPMS/
